<?php
/**
 * Created by PhpStorm.
 * User: Максим
 * Date: 26.02.2017
 * Time: 11:06
 */


echo "<h1>Домашнее задание №2</h1>";
//Задание #1
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Функция должна принимать массив строк и выводить каждую строку в отдельном параграфе (тег <p>)
//Если в функцию передан второй параметр true, то возвращать (через return) результат в виде одной объединенной строки.

echo "<h3>Задание #1</h3>";

function my_func($a) {

    $arguments = func_get_args();

        switch ($arguments[1]){

            case true: return implode(" ", $a);
            break;

            default:
                for ($j=0; $j<count($a); $j++){
                    echo "<p>".$a[$j]."</p>";
                };
                break;
            }
    }


$arr=[
        "Функция должна принимать массив строк и выводить каждую строку в отдельном параграфе.",
        "Если в функцию передан второй параметр true,",
        "то возвращать (через return) результат в виде одной объединенной строки."
    ];

echo "<em>С параметром TRUE:</em><br>";
echo my_func($arr, true);

echo "<br>";

echo "<br><em>Без параметра TRUE:</em><br>";

my_func($arr);



//Задание #2
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
echo "<h3>Задание #2</h3>";
//Функция должна принимать 2 параметра:
//массив чисел;
//строку, обозначающую арифметическое действие, которое нужно выполнить со всеми элементами массива.+
//Функция должна вывести результат на экран.
//Функция должна обрабатывать любой ввод, в том числе некорректный и выдавать сообщения об этом
function func2($arr, $str){
    switch ($str){
        case '+':
            $rez=$arr[0];
            for ($j = 1; $j < count($arr); $j++) {
                $rez = $rez+$arr[$j];
            }
            break;
        case '*':
            $rez=$arr[0];
                for ($j = 1; $j < count($arr); $j++) {
                    $rez = $rez*$arr[$j];
                }
            break;
        case '-':
            $rez=$arr[0];
            for ($j = 1; $j < count($arr); $j++) {
                $rez = $rez-$arr[$j];
            }
            break;
        case '/':
            $rez=$arr[0];
            for ($j = 1; $j < count($arr); $j++) {
                $rez = $rez/$arr[$j];
            }
            break;
        default : echo "Некорректная операция";


    }
    echo $rez;
}
$arr_num=[1, 3, 5, 7];
$symbol='+';

func2($arr_num, $symbol);

//Задание #3
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
echo "<h3>Задание #3</h3>";

//Функция должна принимать переменное число аргументов.
//Первым аргументом обязательно должна быть строка, обозначающая арифметическое действие, которое необходимо выполнить со всеми передаваемыми аргументами.
//Остальные аргументы это целые и/или вещественные числа.
//
//Пример вызова: calcEverything(‘+’, 1, 2, 3, 5.2);
//Результат: 1 + 2 + 3 + 5.2 = 11.2
function func3($arr){
    $arg = func_get_args();

    switch ($arr[0]){
        case '+':
            $rez=$arg[1];
            for ($z = 2; $z < count($arg); $z++) {
                $rez = $rez+$arg[$z];
            }
            break;
        case '*':
            $rez=$arg[1];
            for ($z = 2; $z < count($arg); $z++) {
                $rez = $rez*$arg[$z];
            }
            break;
        case '-':
            $rez=$arg[1];
            for ($z = 2; $z < count($arg); $z++) {
                $rez = $rez-$arg[$z];
            }
            break;
        case '/':
            $rez=$arg[1];
            for ($z = 2; $z < count($arg); $z++) {
                $rez = $rez/$arg[$z];
            }
            break;
        default : echo "Некорректная операция";


    }
    echo $rez;
}
func3('/', 1, 2, 3, 5.2);


//Задание #4
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
echo "<h3>Задание #4</h3>";
//Функция должна принимать два параметра – целые числа.
//Если в функцию передали 2 целых числа, то функция должна отобразить таблицу умножения размером со значения параметров, переданных в функцию.
//(Например если передано 8 и 8, то нарисовать от 1х1 до 8х8). Таблица должна быть выполнена с использованием тега <table>
// В остальных случаях выдавать корректную ошибку.
function table($w, $h){
    if (is_int($w) and is_int($h)){
        echo "<pre></pre><table width='50%' cols='10' align='center'>";
        for ($i=1; $i<=$h; $i++){
            echo "<tr>";
            for ($j=1; $j<=$w; $j++){
                echo "<td>".$i*$j."</td>";
            }
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "некорректные данные";
    }
}

table(9,15);


//Задание #5
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
echo "<h3>Задание #5</h3>";

//Написать две функции.
//Функция №1 принимает 1 строковый параметр и возвращает true, если строка является палиндромом*, false в противном случае.
//Пробелы и регистр не должны учитываться.
//Функция №2 выводит сообщение в котором на русском языке оговаривается результат из функции №1
//
//* Палиндром – строка, одинаково читающаяся в обоих направлениях.
echo "<pre>";

function funPalindrom1($s){

    echo "очистка оригинала от лишних символов и приведение регистра к общему:   <br>";
    $s1 = preg_replace ('/[^a-zA-Zа-яА-Я]+/msiu', '',$s);
    $s2 = strtolower($s1);
    echo "<strong>".$s2."</strong><br>";

    $sr=strrev($s2);
//    echo "<strong>".$sr."</strong><br>";
    echo "очистка отражения от лишних символов и приведение регистра к общему:   <br>";
    $sr1 = preg_replace ('/[^a-zA-Zа-яА-Я]+/msiu', '',$sr)."<br>";
    $sr2 = strtolower($sr1);
    echo "<strong>".$sr."</strong><br>";
//    return $s2==$sr2;
    return strtolower(preg_replace ('/[^a-zA-Zа-яА-Я]+/msiu', '',$s))==strrev(strtolower(preg_replace ('/[^a-zA-Zа-яА-Я]+/msiu', '',$s)));
}

function funPalindrom2($str){
    var_dump(funPalindrom1($str));
    echo "Function #2<br>";
    $fn=funPalindrom1($str);
    switch ($fn){
        case true: echo "Это палиндром";
            break;
        case false: echo "Это не палиндром";
            break;
    }
}

//$strPalindrom="Уплотнил клин толпу.";
//$strPalindrom="Упапиапиапик клин толпу.";
$strPalindrom="qw ErtyTr ewq.";
//$strPalindrom="qwertytrewq.";
//$strPalindrom="qw erty.";
//$strPalindrom="q.";

//echo funPalindrom1($strPalindrom);
funPalindrom2($strPalindrom);



//Задание #6 (выполняется после вебинара “ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Выведите информацию о текущей дате в формате 31.12.2016 23:59
//Выведите unixtime время соответствующее 24.02.2016 00:00:00.

echo "<h3>Задание #6</h3>";
echo "Информация о текущей дате и времени:<br>";
echo date('d.m.Y H:i',time())."<br>";
echo "unixtime время соответствующее 24.02.2016 00:00:00:<br>";
echo mktime(00,00,00,02,24,2016);




//Задание #7 (выполняется после вебинара “ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Дана строка: “Карл у Клары украл Кораллы”. удалить из этой строки все заглавные буквы “К”.
//Дана строка “Две бутылки лимонада”. Заменить “Две”, на “Три”. По желанию дополнить задание.
echo "<h3>Задание #7</h3>";
$strK="Карл у Клары украл Кораллы";
echo $strK."<br>";
echo str_replace ('К', '',$strK)."<br>";
$str23="Две бутылки лимонада";
echo "<br>".$str23."<br>";
echo str_replace('Две', 'Три', $str23);

//Задание #8 (выполняется после вебинара “ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Напишите функцию, которая с помощью регулярных выражений, получит информацию о переданных RX пакетах из переданной строки:
//Пример строки: “RX packets:950381 errors:0 dropped:0 overruns:0 frame:0. “
//Если кол-во пакетов более 1000, то выдавать сообщение: “Сеть есть”
//Если в переданной в функцию строке есть “:)”, то нарисовать смайл в ASCII и не выдавать сообщение из пункта №3.
//Смайл должен храниться в отдельной функции
echo "<h3>Задание #8</h3>";
function smylik(){
    echo "( ͡° ͜ʖ ͡°)<br>";
}

function rxPackets($str)
{
    $pattern1 = "/[a-z]+:[a-z0-9]+/";
    $pattern2 = "/\:\)/";

    preg_match_all($pattern1, $str, $strArr1);
    preg_match($pattern2, $str, $strArr2);

    if (count($strArr2[0]) !== 0) {
        smylik();
    } elseif (count($strArr1[0]) > 3) {
        echo "Сеть есть";
    }
}

$rxStr="RX packets:950381 errors:0 dropped:0 overruns:0 frame:0.:)";
//$rxStr="RX packets:950381 errors:0 dropped:0 overruns:0 frame:0.";
rxPackets($rxStr);


//Задание #9 (выполняется после вебинара “ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Создайте средствами ОС файл test.txt и поместите в него текст “Hello, world”
//Напишите функцию, которая будет принимать имя файла, открывать файл и выводить содержимое на экран.
echo "<h3>Задание #9</h3>";

function getContentFile($f){
    $string = file_get_contents($f, 'r');
    echo $string;
}
$file="test.txt";
getContentFile($file);

//Задание #10 (выполняется после вебинара “ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Создайте файл anothertest.txt средствами PHP. Поместите в него текст - “Hello again!”
echo "<h3>Задание #10</h3>";
 function createFile($f){
     fopen($f, 'w');
     file_put_contents($f, "Hello again!");
     echo file_get_contents($f);
 }
$fileName="anothertest.txt";
createFile($fileName);